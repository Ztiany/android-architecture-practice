buildscript {
    apply from: './gradle/dependency.gradle'
    apply from: './gradle/configuration.gradle'

    repositories {
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/apache-snapshots" }
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
    }

    dependencies {
        //android
        classpath "com.android.tools.build:gradle:7.3.1"
        //kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //hilt
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        //navigation
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
        //channel
        classpath "com.leon.channel:plugin:2.0.3"
        // for publishing
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'
    }
}

allprojects {

    repositories {
        mavenCentral()
        google()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/apache-snapshots" }
        maven { url "https://www.jitpack.io" }

        configurations.configureEach {
            resolutionStrategy.force(
                    AndroidLibraries.appcompat,
                    AndroidLibraries.activity,
                    AndroidLibraries.activityKtx,
                    AndroidLibraries.fragment,
                    AndroidLibraries.fragmentKtx,
                    AndroidLibraries.ktx,
                    AndroidLibraries.annotations,
                    AndroidLibraries.constraintLayout,
                    KotlinLibraries.kotlinStdlib,
                    KotlinLibraries.kotlinCoroutines
            )
        }

    }

    tasks.withType(Javadoc).all {
        //乱码问题
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
        //javadoc 编译不通过问题
        enabled = false
    }

    plugins.withId("com.vanniktech.maven.publish") {
        mavenPublish {
            sonatypeHost = "S01"
        }
    }

}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}