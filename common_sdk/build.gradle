plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-parcelize"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdkVersion AppConfig.compileSdkVersion
    buildToolsVersion AppConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion AppConfig.minSdkVersion
        targetSdkVersion AppConfig.targetSdkVersion
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName

        vectorDrawables.useSupportLibrary = true
        resConfigs "zh", "en"//只需要中文和英文资源

        buildConfigField("boolean", "openDebug", "${AppConfig.isOpenDebug}")
        buildConfigField("boolean", "showDebugTools", "${AppConfig.showDebugTools}")
        buildConfigField("boolean", "trustHttpsCertification", "${AppConfig.trustHttpsCertification}")
        buildConfigField("boolean", "openLog", "${AppConfig.isOpenLog}")
        buildConfigField("String", "specifiedHost", "\"${AppConfig.HOST_ENV}\"")
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    //如果不想生成某个布局的绑定类，可以在根视图添加 tools:viewBindingIgnore="true" 属性。
    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            java.srcDirs += "src/common/java"
            res.srcDirs += "src/common/res"

            java.srcDirs += "src/tools-web/java"
            res.srcDirs += "src/tools-web/res"

            java.srcDirs += "src/tools-gallery/java"
            res.srcDirs += "src/tools-gallery/res"

            java.srcDirs += "src/tools-upgrade/java"

            java.srcDirs += "src/tools-debug/java"
            res.srcDirs += "src/tools-debug/res"

            java.srcDirs += "src/tools-sdk/java"
        }
    }

}

dependencies {
    //测试
    testImplementation(TestLibraries.junit)

    //通用架构
    api project(':base_arch')
    //通用工具
    api project(":base_utils")

    //SDK API 规范
    api project(':common_sdk_ui')
    //SDK UI 规范
    api project(':common_sdk_api')

    //依赖的业务 API
    implementation project(":module_main:api")

    //Android
    api AndroidLibraries.multidex
    api AndroidLibraries.exifinterface
    api AndroidLibraries.flexbox
    api AndroidLibraries.ktx

    /*Hilt*/
    api AndroidLibraries.hiltDagger
    kapt AndroidLibraries.hiltDaggerApt

    /*网络库*/
    implementation ThirdLibraries.okHttp
    implementation ThirdLibraries.okHttpLogging
    api ThirdLibraries.simpleHttp

    /*Gson*/
    api ThirdLibraries.gson

    /*Retrofit*/
    api ThirdLibraries.retrofit
    implementation ThirdLibraries.retrofitConverterGson

    /*GlideAPT*/
    api ThirdLibraries.imageLoader
    kapt ThirdLibraries.glideApt

    /*媒体选择库*/
    api ThirdLibraries.mediaSelector

    /*UI*/
    api UILibraries.qmui
    api UILibraries.circleImageView
    api UILibraries.keyboardVisibilityEvent

    /*Utils*/
    api ThirdLibraries.jOOR
    api ThirdLibraries.simpleBus
    api ThirdLibraries.storage
    api ThirdLibraries.permissionx
    implementation "id.zelory:compressor:3.0.1"

    //Channel
    implementation "com.leon.channel:helper:2.0.3"
    //Bugly
    implementation "com.tencent.bugly:crashreport:3.4.4"

    //Debug
    if (AppConfig.isOpenDebug) {
        //Stetho
        implementation DebugLibraries.stetho
        implementation DebugLibraries.stethoOkhttp3
        //LeakCanary
        implementation DebugLibraries.debugLeakCanary
        //UETool
        implementation DebugLibraries.ueTool
    }
}