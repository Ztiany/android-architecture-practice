plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.jetbrains.kotlin.parcelize)
    alias(libs.plugins.jetbrains.kotlin.kapt)
    alias(libs.plugins.google.ksp)
    alias(libs.plugins.google.hilt)
}

android {
    namespace "com.app.base"
    compileSdk AppConfig.compileSdkVersion

    defaultConfig {
        minSdk AppConfig.minSdkVersion
        targetSdk AppConfig.compileSdkVersion
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName

        vectorDrawables.useSupportLibrary = true
        resConfigs "zh", "en"//只需要中文和英文资源

        buildConfigField("boolean", "openDebug", "${AppConfig.isOpenDebug}")
        buildConfigField("boolean", "showDebugTools", "${AppConfig.showDebugTools}")
        buildConfigField("boolean", "trustAllHttpsCertification", "${AppConfig.httpsTrustAll}")
        buildConfigField("boolean", "openLog", "${AppConfig.isOpenLog}")
        buildConfigField("String", "specifiedHost", "\"${AppConfig.hostENV}\"")
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs = ["-Xcontext-receivers"]
    }

    //如果不想生成某个布局的绑定类，可以在根视图添加 tools:viewBindingIgnore="true" 属性。
    buildFeatures {
        viewBinding true
        buildConfig true
    }

    sourceSets {
        main {
            java.srcDirs += "src/common/java"
            res.srcDirs += "src/common/res"

            java.srcDirs += "src/tools-web/java"
            res.srcDirs += "src/tools-web/res"

            java.srcDirs += "src/tools-gallery/java"
            res.srcDirs += "src/tools-gallery/res"

            java.srcDirs += "src/tools-upgrade/java"
            res.srcDirs += "src/tools-upgrade/res"

            java.srcDirs += "src/tools-debug/java"
            res.srcDirs += "src/tools-debug/res"

            java.srcDirs += "src/tools-sdk/java"
        }
    }

}

dependencies {
    //测试
    testImplementation(libs.test.junit)

    //通用架构
    api project(':base:core')
    api project(':base:fragment')
    //通用工具
    api project(":base:utils")

    //SDK API 规范
    api project(':common:ui')
    //SDK UI 规范
    api project(':common:api')

    //性能监控
    implementation project(':apm:core')

    //依赖的业务 API
    implementation project(":feature:main:api")

    //Android
    api libs.androidx.ktx
    api libs.androidx.exifinterface
    api libs.androidx.percentlayout
    api libs.google.ui.flexbox

    /*Hilt*/
    api libs.google.hilt
    ksp libs.google.hilt.compiler

    /*网络库*/
    implementation libs.square.okhttp
    implementation libs.square.okhttp.logging
    api libs.ztiany.simplehttp

    /*Gson*/
    api libs.google.gson

    /*Retrofit*/
    api libs.square.retrofit
    implementation libs.square.retrofit.converter.gson

    /*GlideAPT*/
    api libs.ztiany.imageloader
    kapt libs.bumptech.glide.ksp

    /*媒体选择库*/
    api libs.ztiany.mediaselector

    /*UI*/
    api libs.yslibrary.keyboardvisibilityevent

    /*Utils*/
    api libs.jooq.joor
    api libs.ztiany.simplebus
    api libs.ztiany.storage
    api libs.guolin.permissionx

    implementation "id.zelory:compressor:3.0.1"

    //Bugly
    implementation "com.tencent.bugly:crashreport:3.4.4"

    //Debug
    if (AppConfig.isOpenDebug) {
        //Stetho
        implementation libs.facebook.stetho
        implementation libs.facebook.stetho.okhttp3
        //LeakCanary
        implementation libs.squareup.leakcanary.debug
    }
}