plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.google.ksp)
    alias(libs.plugins.google.hilt)
}

android {
    namespace "me.ztiany.wan.app"
    compileSdk AppConfig.compileSdkVersion

    signingConfigs {
        create("release") {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias AppConfig.releaseKeyAlias
            keyPassword AppConfig.releaseKeyPassword
            storeFile rootProject.file(AppConfig.releaseKeyFileName)
            storePassword AppConfig.releaseKeyPassword
        }
    }

    defaultConfig {
        applicationId "me.ztiany.android.play"
        minSdk AppConfig.minSdkVersion
        targetSdk AppConfig.compileSdkVersion
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName

        vectorDrawables.useSupportLibrary = true
        resConfigs "zh", "en"//只需要中文和英文资源
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {

        //测试
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "unspecified"]
            resValue("string", "app_name", "玩安卓")
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }

        //正式发布
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "app_name", "玩安卓")
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs = ["-Xcontext-receivers"]
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "${project.name}-${variant.versionName}.apk"
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    testImplementation(libs.test.junit)
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //modules
    implementation project(":common:core")
    implementation project(":feature:main:main")
    implementation project(":feature:account:main")

    /*Hilt*/
    api libs.google.hilt
    ksp libs.google.hilt.compiler
}